{
  "hash": "f24a598c9a762582e7e5a49ecf51370a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 2: Horizon Plot\"\nauthor: \"Goh Si Hui\"\ndate: 2024/02/24\ndate-format: long\ndate-modified: \"last-modified\"\nformat: html \nexecute: \n  echo: true\n  eval: true\n  freeze: true\n  warning: false\n  message: false\neditor: visual \n---\n\n\n# Getting Started\n\nFirst, let us ensure that the required R packages have been installed and import the relevant data for this hands-on exercise.\n\n## Installing the R Packages\n\nFor this in-class exercise, we will be using the following packages:\n\n-   [tidyverse](https://www.tidyverse.org/)\n-   [ggHoriPlot](https://rivasiker.github.io/ggHoriPlot/)\n-   [ggthemes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/)\n\nThe code chunk below uses `p_load()` of [**pacman**](https://trinker.github.io/pacman/vignettes/Introduction_to_pacman.html) package to check if the packages are installed in the computer. If they are, they will be launched in R. Otherwise, **pacman** will install the relevant packages before launching them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggHoriPlot, ggthemes)\n```\n:::\n\n\n## Importing the Data\n\nWe will use `read_csv()` to import the csv file into R and use `glimpse()` to check the imported data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naverp <- read_csv(\"data/AVERP.csv\")\nglimpse(averp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 7,452\nColumns: 3\n$ Date             <chr> \"1/1/2014\", \"1/2/2014\", \"1/3/2014\", \"1/4/2014\", \"1/5/…\n$ `Consumer Items` <chr> \"Wholemeal Bread (Per 400 Gram)\", \"Wholemeal Bread (P…\n$ Values           <dbl> 2.05, 2.05, 2.04, 2.04, 2.05, 2.05, 2.05, 2.05, 2.04,…\n```\n\n\n:::\n:::\n\n\nFrom the above output, we noted that the `Date` field was read as character data type. We will use **Lubriate** package to change the `Date` field to Date data type.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naverp <- averp %>%\n  mutate(Date = dmy(Date)) %>%\n  rename(ConsumerItem = `Consumer Items`)\nglimpse(averp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 7,452\nColumns: 3\n$ Date         <date> 2014-01-01, 2014-02-01, 2014-03-01, 2014-04-01, 2014-05-…\n$ ConsumerItem <chr> \"Wholemeal Bread (Per 400 Gram)\", \"Wholemeal Bread (Per 4…\n$ Values       <dbl> 2.05, 2.05, 2.04, 2.04, 2.05, 2.05, 2.05, 2.05, 2.04, 2.0…\n```\n\n\n:::\n:::\n\n\n# Plotting Horizon Plot\n\nWe will plot out data from 2018-01-01 onwards by filtering the `Date` field from `averp` datatable. To plot the horizon plot, we will use `geom_horizon()` and `facet_grid()`. Then we will add theme using `theme_few()` from ggthemes, customise a diverging colour scheme using `scale_fill_hcl()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naverp %>%\n  filter(Date >= \"2018-01-01\") %>%\n  ggplot() +\n  geom_horizon(aes(x = Date, y= Values),\n               origin = \"midpoint\",\n               horizonscale = 6) +\n  facet_grid(ConsumerItem~.) + \n  theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'none',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n    scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle('Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)')\n```\n\n::: {.cell-output-display}\n![](In-class_Ex02_files/figure-html/unnamed-chunk-4-1.png){width=1152}\n:::\n:::\n\n\n::: callout-note\n## Tips!\n\n-   If there are positive and negative values, use a diverging colour scheme\n\n-   Tried using hrbrthemes instead of ggthemes to beautify the horizon plot but it didn't work out well :(\n\n-   Some useful arguments used in the above code chunk:\n  -   panel.spacing.y: to adjust spacing between facet panels along the y-axis \n\n  -    strip.text.y: to adjust the vertical facet labels \n  \n  -   scale_x_date: to override the default scale for dates along the x-axis. \n  \n:::\n",
    "supporting": [
      "In-class_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}