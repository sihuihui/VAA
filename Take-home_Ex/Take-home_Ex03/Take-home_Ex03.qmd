---
title: "Take-home Exercise 3: Be Weatherwise or Otherwise"
author: "Goh Si Hui"
date: 2024/02/12
date-format: long
date-modified: "last-modified"
format: html 
execute: 
  echo: true
  eval: true
  warning: false
editor: visual 
---

# About this Exercise

In this take-home exercise, I will be using the visual analytics techniques learnt in ISSS 608 to visualise uncertainty methods and create interactive visual analytics to validate the [projection](https://www.nccs.gov.sg/singapores-climate-action/impact-of-climate-change-in-singapore/) that daily mean temperature is projected to increase by 1.4 to 4.6 degrees celsius by the end of the century.

# Getting Started

First, let us ensure that the required R packages have been installed and import the relevant data for this exercise.

## Loading R packages

For this exercise, we will be using the following packages:

-   [**tidyverse**](https://www.tidyverse.org/) : to load the core tidyverse packages, which includes ggplot2 and dplyr.

-   [**ggdist**](https://mjskay.github.io/ggdist/): provides stats and geoms for visualising distributions and uncertainty.

-   plotly:

-   gganimate

-   DT

-   crosstalk

-   ggstatsplot:

-   performance:

-   parameters:

The code chunk below uses `p_load()` of [**pacman**](https://trinker.github.io/pacman/vignettes/Introduction_to_pacman.html) package to check if the abovementioned packages are installed in the computer. If they are, they will be launched in R. Otherwise, **pacman** will install the relevant packages before launching them.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

pacman::p_load(tidyverse, ggdist, plotly, gganimate, DT, crosstalk, ggstatsplot, performance, parameters, patchwork)

```

## Importing the Data 

For this exercise, we will be using the historical daily temperature data from Meteorological Service Singapore. As there are more than 60 weather stations in Singapore, for the purpose of this exercise, we will be using the temperature data from Changi weather station in August 1983, 1993, 2003, 2013 and 2023.

:::{.panel-tabset}

## Aug 1983
```{r}
aug1983 <- read_csv("data/DAILYDATA_S24_198308.csv")
head(aug1983,10)
```
## Aug 1993
```{r}
aug1993 <- read_csv("data/DAILYDATA_S24_199308.csv")
head(aug1993,10)
```
## Aug 2003
```{r}
aug2003 <- read_csv("data/DAILYDATA_S24_200308.csv")
head(aug2003,10)
```

## Aug 2013
```{r}
aug2013 <- read_csv("data/DAILYDATA_S24_201308.csv")
head(aug2013,10)
```

## Aug 2023
```{r}
aug2023 <- read_csv("data/DAILYDATA_S24_202308.csv")
head(aug2023,10)
```
:::

## Data Preparation 

As the downloaded data are in different tables, we will join them into one table first.

```{r}
changi <- full_join(aug1983, aug1993)
changi <- full_join(changi, aug2003)
changi <- full_join(changi, aug2003)
changi <- full_join(changi, aug2013)
changi <- full_join(changi, aug2023)
```
```{r}
datatable(changi)

```


drop the columns that we do not need

```{r}
changitemp <- changi %>%
  select(Year, Day, `Mean Temperature (degrees celsius)`, `Minimum Temperature (degrees celsius)`, `Maximum Temperature (degrees celsius)`)

```

check for missing data 
```{r}

any(is.na(changitemp))

```

Check data type

```{r}

glimpse(changitemp)


```

```{r}
changitemp <- rename(changitemp, 
       MeanTemp = `Mean Temperature (degrees celsius)`,
       MinTemp = `Minimum Temperature (degrees celsius)`,
       MaxTemp = `Maximum Temperature (degrees celsius)`
       )

```

```{r}
changitemp$Day <- as.factor(changitemp$Day)

```


```{r}
changitemp <- changitemp %>%
  mutate(diff = round(MaxTemp - MinTemp,1),
         avgMaxMin = round((MaxTemp + MinTemp)/2, 1)) 
```



Perform groupby Year to get the mean temperature for the month, min max temperature for the month,

```{r}
changitemp_byyear <- changitemp %>%
  group_by(Year) %>%
  summarise(
    avgdailytemp = round(mean(MeanTemp),1),
    avgmintemp = round(mean(MinTemp),1), 
    avgmaxtemp = round(mean(MaxTemp),1),
    minMeanTemp = min(MeanTemp),
    maxMeanTemp = max(MeanTemp), 
    minMinTemp = min(MinTemp),
    maxMinTemp = max(MinTemp),
    minMaxTemp = min(MaxTemp),
    maxMaxTemp = max(MaxTemp)) 
  

```


```{r}
temp <- full_join(changitemp, changitemp_byyear)
datatable(temp)

```


# Exploratory Data Analysis

plot mean temperature 



min daily temp

max daily temp

# Confirmatory Data Analysis

# My Takeaways

# References
