---
title: "Take-home Exercise 2"
author: "Goh Si Hui"
date: 2024/01/25
date-format: long
date-modified: "last-modified"
format: html 
execute: 
  echo: true
  eval: true
  warning: false
editor: visual 
---

# About this Exercise

In this take-home exercise, I will be using the data visualisation design principles and best practices learnt in ISSS608 Lesson 1 and 2 to improve on my peer's visualisations.

# Getting Started

First, let us ensure that the required R packages have been installed and import the relevant data for this exercise.

## Loading R packages

For this exercise, we will be using the following packages:

-   [**tidyverse**](https://www.tidyverse.org/) : to load the core tidyverse packages, which includes ggplot2 and dplyr.

-   [**patchwork**](https://patchwork.data-imaginist.com/): to create composition of ggplot2 plots using arithmetic operators.

-   [**ggrepel**:](https://ggrepel.slowkow.com/) to repel overlapping text labels away from each other.

-   [**ggdist**](https://mjskay.github.io/ggdist/): provides stats and geoms for visualising distributions and uncertainty.

-   [**ggridges**](https://cran.r-project.org/web/packages/ggridges/vignettes/introduction.html): provides geoms to plot ridgeline plots, which are partially overlapping line plots that create the impression of a mountain range.

-   [**knitr**](https://github.com/yihui/knitr): provides a general-purpose tool for dynamic report generation in R. We will use this to mainly help us generate simple tables.

The code chunk below uses `p_load()` of [**pacman**](https://trinker.github.io/pacman/vignettes/Introduction_to_pacman.html) package to check if the abovementioned packages are installed in the computer. If they are, they will be launched in R. Otherwise, **pacman** will install the relevant packages before launching them.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

pacman::p_load(tidyverse, haven, patchwork, ggrepel, ggdist, ggridges, knitr, hrbrthemes)
```

## Importing Data into R

For this exercise, we are using [PISA 2022 database](https://www.oecd.org/pisa/data/2022database/)'s student questionnaire data file, which is the same dataset as Take-home exercise 1. As we have already filtered out the PISA data from Singapore and saved it in rds file previously in Take-home exercise 1, let us import the rds file using the following code chunk.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

stu_qqq_SG <- read_rds("data/stu_qqq_SG.rds")

```

# Data Preparation

Before I can critque and remake my peer's charts, I followed the data preparation steps taken by my peer.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

stu_qqq_SG_filtered <- stu_qqq_SG %>%
  select_if(function(x) !all(x == x[1]))


stu_qqq_SG_filtered <- stu_qqq_SG_filtered %>%
  mutate(
    MATH = rowMeans(select(., PV1MATH:PV10MATH), na.rm = TRUE),
    READ = rowMeans(select(., PV1READ:PV10READ), na.rm = TRUE),
    SCI = rowMeans(select(., PV1SCIE:PV10SCIE), na.rm = TRUE)
  )

stu_qqq_SG_filtered <- stu_qqq_SG_filtered %>%
  mutate(Gender = ifelse(ST004D01T == 1, "Female", "Male"))

stu_qqq_SG_filtered <- stu_qqq_SG_filtered %>%
  mutate(CNTSCHID = as.character(CNTSCHID))


```

As the charts that we will be re-creating only uses the selected columns, we will also drop the columns that we will not be using for this exercise.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

stu <- stu_qqq_SG_filtered %>% 
  select(CNTSTUID,CNTSCHID, Gender, MATH, READ, SCI, ESCS)
```

# Data Visualisation Critique

## Chart 1: Comparison of Scores Amongst Students

![Chart 1 from Original Author](images/Chart1.png){fig-align="center"}

### Critique

-   The author used a notched box plot, which gave a summary of the minimum, maximum, median and interquartile range of Math, Reading and Science scores for Singapore students. The box plots also indicated "outliers" with those black dots at the end but I wondered if there was a need to show outliers since it seemed that the author wanted to find out if there was any difference in median scores between subjects. If the message was not on the outliers, we can choose to remove these outliers. If the message was more on the differences in scores between subjects, we can consider plots like ridgeplots.

-   In the presented charts, the notches of the box plots were not very obvious, possibly due to the size of the boxplots being very wide. Also, these charts were in different tabs, making it hard for readers to see if there was a difference in scores between subjects. It might be easier for readers to compare if these plots were placed side by side.

-   There was a red dot for the mean scores of each subject but it would be more useful if it has text annotation so that readers can easily read off the mean value.

-   One of the pitfalls of box plot is that it does not show the distribution of the data well. It hides multimodality and other features of distributions. Hence, we can also consider alternatives such as violin plot.

### Proposed Sketch

-   As having a clear message for the plot was the first step of of data visualisation design process, I shall assume that the author wanted to show if there was any difference in scores between the different subjects (Maths, Reading and Science) among Singapore students.

-   If we want to show difference in scores between subjects, we can consider the following plots:

![Suggestions for Chart 1](images/Suggestion%201.png){fig-align="center"}

Firstly, for all the options, I proposed to put the scores for all 3 subjects side by side. Also, rather that stitching 3 different plots together (i.e. 1 plot for 1 subject), I suggested to put all three plots together so that they can be on the same axes and easier for comparison.

There are pros and cons for the above 3 options:

-   Violin plot: shows the distribution and summary stats of the data. However, certain parts of it are a bit redundant because half of the violin would already reveal the distribution. So a violin plot might not be that efficient use of space.

-   Ridge plot: This brings us to ridge plot, which uses "half" of the violin plot and we rotated the "half-violin" to be horizontal, giving us the image of "ridges". Ridge plot also can show distribution of the data and makes good use of the space. We can add annotations (e.g. lines and texts) to show the median and mean. However, ridge plot might be better for situations where we have medium to high number of groups to represent. In this case, we have less than 5 groups, so we might want to consider other distribution plots.

-   Raincloud plot: We can further enhance the ridge plot and make it into a raincloud plot by adding boxplot and dotplot. This will also show us the distribution and summary statistics of the data.

### Makeover Design

After weighing the above pros and cons, I decided to change the box plots to raincloud plot.

Before that let us prepare the data for this chart.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
stu1 <- stu %>%
  select(CNTSTUID, MATH, READ, SCI) %>%
  pivot_longer(!CNTSTUID, names_to = "Subject")
```

```{r}
#| code-fold: true
#| code-summary: "Show the code"
ggplot(stu1, 
       aes(x = Subject, 
           y = value,
           color = Subject)) + 
  stat_halfeye(adjust = 0.5,
               width = 0.5,
               justification = -0.1, 
               .width = 0, 
               point_color = NA) +
  geom_boxplot(width = 0.1, outlier.shape = NA) +
  stat_dots(side = "left",
            justification = 1.1,
            binwidth = 0.5,
            dotsize = 2) + 
  coord_flip() + theme_minimal()+
  stat_summary(fun = median, geom = "text", aes(label = paste("median:", round(after_stat(y), 0))),
               position = position_nudge(x=0.05), vjust=-0.5, size = 3, color = "black")+
  stat_summary(fun=mean, geom ="text", aes(label = round(after_stat(y), 0)), position = position_nudge(x = 0.15), vjust = 4, color= "red", size = 3)+ 
  stat_summary(fun = mean, geom = "point", shape = 16, size = 2, color = "red",
               position = position_nudge(x = 0.0)) +
  labs(title = "There is slight difference in student scores between subjects.\n However, student scores for each subject has a wide range.", subtitle = "Maximum score for a subject is 900", caption = "Data from PISA 2022", ylab = "Scores")

```

## Chart 2: Comparison of Scores Between Gender

![Chart 2 from Original Author](images/Chart2.png){fig-align="center"}

### Critique

-   The original author seems to want to see if there are any differences in subject scores between gender. Again, notched boxplots were used and there was a red dot to indicate the mean.

-   Similar to the first chart, the notches of the box plots were not very obvious, possibly due to the size of the boxplots being very wide. Also, these charts were in different tabs, making it hard for readers to see if there was a difference in subject scores between genders. It might be easier for readers to compare if these plots were placed side by side.

-   There was a red dot on each boxplot to indicate the mean scores of each subject and gender but it would be more useful if it has text annotation so that readers can easily read off the mean value.

### Proposed Sketch

![Suggestions for Chart 2](images/Suggestion2.png){fig-align="center"}

Since the message is to show if there was any differences between genders and their subject scores, I proposed to:

-   Option 1: use ridge plot to plot all the subject scores for both gender plotted on 1 chart,

-   Option 2: use ridge plot and box plot to display the scores between genders for each subject in separate charts, then make use of patchwork to combine the 3 charts into 1 for ease of comparison.

-   I did not propose a raincloud plot for this because if we plot all six distributions into 1,

There are pros and cons for each option.

For option 1, having the scores for all subjects and gender in 1 plot means that we will have 6 distributions in 1 plot. It might be easy to pick out any obvious outliers or differences. However it might be too overwhelming since there are 6 "ridges" to look and compare at 1 shot, or some readers might not know where to start. So if we use option 1, we would have to have clear annotations and titles to guide the readers.

For option 2, it splits the plots by subject so that we can see if there are any differences in scores between gender for each subject. However, we might not be able easily compare differences in scores between subject for each gender (e.g. to find out if female students performed better in Reading as opposed to Maths).

### Makeover Design

After weighing the above pros and cons, I decided to change the box plots to combine option 1 and 2 ideas. So we will plot ridge plots and box plots for gender and subjects into 1 plot.

Before that let us prepare the data for this chart.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

stu$CNTSTUID <- as.factor(stu$CNTSTUID)

stu2 <- stu %>%
  select(CNTSTUID, Gender, MATH, READ, SCI) %>%
  pivot_longer(cols = MATH:SCI) %>%
  rename("Subject" = "name",
         "Scores" = "value")

stu3 <- stu2 %>%
  mutate(GENDER = Gender) %>%
  unite(Gen_Sub, c(Gender, Subject))
```

```{r}
#| code-fold: true
#| code-summary: "Show the code"
ggplot(stu3, 
       aes(x = Scores, 
           y = Gen_Sub, 
           color = GENDER)) + 
 stat_dotsinterval(slab_shape = 15, quantiles = 500) +
   scale_color_distiller(aesthetics = "slab_color", guide = "colorbar2")+ stat_summary(fun = median, geom = "text", aes(label = paste("median:", round(after_stat(x), 0))),
               position = position_nudge(y=-0.25), vjust=-0.5, size = 3, color = "black")+
  stat_summary(fun = min, geom = "text", aes(label = paste(round(after_stat(x), 0))),
               position = position_nudge(y=-0.25), vjust=-0.5, size = 2, color = "grey")+
  stat_summary(fun = max, geom = "text", aes(label = paste(round(after_stat(x), 0))),
               position = position_nudge(y=-0.25), vjust=-0.5, size = 2, color = "grey")+theme_minimal()
  
  
   
```

## Chart 3: Comparison of Scores Between Schools

![Chart 3 by Original Author](images/Chart3.png){fig-align="center"}

### Critique

-   The students' scores were averaged to determine the school's score but averages are affected by extreme values. Based on the original author's interpretation, it seemed that the derived school's score was So even if a school's score was within the box plot and was not an outlier, it does not mean that the school does not have underperforming students. This is because the school might have some students with very high scores to make up for the underperforming students.

-   As such, I suggest to find out the difference between the top score and bottom score for each school. By doing so we get the range of the students' scores for each school. Then we will compare each school's range to determine if the school is doing "well".

-   In addition, the author chose notched box plots to compare the schools' scores for different subjects. These plots were also in different tabs, making it hard to compare across subjects.

-   There was a red dot for the average school score but it would be more useful if it has text annotation so that readers can easily read off the value.

### Proposed Sketch

![Suggestions for Chart 3](images/Suggestion3.png){fig-align="center"}

-   For this chart, I think the tricky bit is that there are many schools (\~165 schools) to plot out.

-   Initially, I wanted to do a dumbbell plot for each school. So each dot would show to top score and bottom score for each school and the line would show the difference between the top scores and bottom scores. But I realised that I would be difficult when there are more than 160 schools to plot out.

-   Hence, I came up with Options 2 and 3. The height of the bar or 'lollipop' would show the difference in the top and bottom scores for each school. We can also add a threshold so that we know which schools have a wide range and which schools have students performing at similar levels.

-   The difference between barplot and lollipop plot is that lollipop plot uses less ink so people can focus on the height of the "dot".

### Makeover Design

After considering the various strengths and weaknesses of the various plots, we decided to plot a lollipop plot.

Let us first prepare the data.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
stu_math_min <- stu %>%
  group_by(CNTSCHID) %>%
  summarise_at(vars(MATH),
               list(min_math = min))

stu_math_max <- stu %>%
  group_by(CNTSCHID) %>%
  summarise_at(vars(MATH),
               list(max_math = max))

stu_math <- full_join(stu_math_max, stu_math_min,
             by = "CNTSCHID")

stu_math$diff <- stu_math$max_math - stu_math$min_math

stu_math$CNTSCHID <- substr(stu_math$CNTSCHID, 6, 8)

stu_math <- stu_math %>% 
  mutate(mycolor = ifelse(diff>250, "red", "blue"))%>%
   arrange(diff) %>%    
  mutate(CNTSCHID=factor(CNTSCHID, levels=CNTSCHID))  
```

```{r}
#| code-fold: true
#| code-summary: "Show the code"
stu_read_min <- stu %>%
  group_by(CNTSCHID) %>%
  summarise_at(vars(READ),
               list(min_read = min))

stu_read_max <- stu %>%
  group_by(CNTSCHID) %>%
  summarise_at(vars(READ),
               list(max_read = max))

stu_read <- full_join(stu_read_max, stu_read_min,
             by = "CNTSCHID")

stu_read$diff <- stu_read$max_read - stu_read$min_read

stu_read$CNTSCHID <- substr(stu_read$CNTSCHID, 6, 8)

stu_read <- stu_read %>% 
  mutate(mycolor = ifelse(diff>250, "red", "blue"))%>%
   arrange(diff) %>%    
  mutate(CNTSCHID=factor(CNTSCHID, levels=CNTSCHID))  
```

```{r}
#| code-fold: true
#| code-summary: "Show the code"
stu_sci_min <- stu %>%
  group_by(CNTSCHID) %>%
  summarise_at(vars(SCI),
               list(min_sci = min))

stu_sci_max <- stu %>%
  group_by(CNTSCHID) %>%
  summarise_at(vars(SCI),
               list(max_sci = max))

stu_sci <- full_join(stu_sci_max, stu_sci_min,
             by = "CNTSCHID")

stu_sci$diff <- stu_sci$max_sci - stu_sci$min_sci

stu_sci$CNTSCHID <- substr(stu_sci$CNTSCHID, 6, 8)

stu_sci <- stu_sci %>% 
  mutate(mycolor = ifelse(diff>250, "red", "blue"))%>%
   arrange(diff) %>%    
  mutate(CNTSCHID=factor(CNTSCHID, levels=CNTSCHID))  
```

```{r fig.width=4, fig.height=20}
#| code-fold: true
#| code-summary: "Show the code"
p1 <- ggplot(stu_math, aes(x=CNTSCHID, y = diff)) +
  geom_segment(aes(x=CNTSCHID, xend=CNTSCHID, y = 250, yend=diff), color = "grey") +
  geom_point(color=stu_math$mycolor, size = 2) +
  theme_minimal()+
  theme(
    panel.grid.major.x = element_blank(),
    panel.border = element_blank(),
    axis.ticks.x = element_blank()
  ) +
  xlab("SchoolID") +
  ylab("Difference in Math Scores") + coord_flip()

p1
```

```{r fig.width=4, fig.height=20}
#| code-fold: true
#| code-summary: "Show the code"
p2 <- ggplot(stu_read, aes(x=CNTSCHID, y = diff)) +
  geom_segment(aes(x=CNTSCHID, xend=CNTSCHID, y = 250, yend=diff), color = "grey") +
  geom_point(color=stu_read$mycolor, size = 2) +
  theme_minimal()+
  theme(
    panel.grid.major.x = element_blank(),
    panel.border = element_blank(),
    axis.ticks.x = element_blank()
  ) +
  xlab("SchoolID") +
  ylab("Difference in Reading Scores") + coord_flip()

p2
```

```{r fig.width=4, fig.height=20}
#| code-fold: true
#| code-summary: "Show the code"
p3 <- ggplot(stu_sci, aes(x=CNTSCHID, y = diff)) +
  geom_segment(aes(x=CNTSCHID, xend=CNTSCHID, y = 250, yend=diff), color = "grey") +
  geom_point(color=stu_sci$mycolor, size = 2) +
  theme_minimal()+
  theme(
    panel.grid.major.x = element_blank(),
    panel.border = element_blank(),
    axis.ticks.x = element_blank()
  ) +
  xlab("SchoolID") +
  ylab("Difference in Science Scores") + coord_flip()

p3
```

## Chart 4: Comparison of Scores and Students' Socioeconomic Status

### Critique

![Chart 4 by Original Author](images/Chart4.png){fig-align="center"}

-   The author used scatter plot to show the relationship between socioeconomic status (ESCS) and subject scores. Added a line of best fit to show the relationship between ESCS and subject scores, which was useful to illustrate the relationship.
-   However, because there are many data points (we have more than 6000 observations), the scatter plots were too dense to interpret.
-   

### Proposed Sketch

![Suggestions for Chart 4](images/Suggestion4.png){fig-align="center"}

We can consider plotting a hexbin plot to show the density of points, can help to identify patterns and outliers in the data.

binning makes it easier to identify data clusters and depict patterns.

We can also change the scores from numerical to categorical by binning the scores into the various proficiency levels.

### Makeover Design

```{r}
#| code-fold: true
#| code-summary: "Show the code"
h1 <- ggplot(stu, aes(MATH, ESCS)) +
  geom_hex(bins = 50)

h2 <- ggplot(stu, aes(READ, ESCS)) +
  geom_hex(bins = 50)

h3 <- ggplot(stu, aes(SCI, ESCS)) +
  geom_hex(bins = 50)

```

# My Takeaways

By reworking my peer's visualisation made me reflect and think of ways to improve my own take-home exercise 1. I find that determining the message that we want to convey is an important starting point to figure out and "shortlist" which charts to use. After shortlisting the possible charts to use, I find that I struggled to choose the best chart because each chart has its pros and cons and I learnt that there are different ways to show the same message. I managed to finally decide on the chart to use by plotting the "shortlisted" charts out and see which one works best in my opinion. I also learnt that adding annotations and thinking how to make the chart "prettier" are very time consuming but important steps. People often took for granted that visually appealling and efficient charts need a lot of thought and time spent into it.

# References

-   Kam, T. S. (2023). *R for Visual Analytics* \[Web-book\]. <https://r4va.netlify.app/>.

-   Kay M (2024). “ggdist: Visualizations of Distributions and Uncertainty in the Grammar of Graphics.” *IEEE Transactions on Visualization and Computer Graphics*, 1–11. [doi:10.1109/TVCG.2023.3327195](https://doi.org/10.1109/TVCG.2023.3327195).

-   Wickham, H., Navarro, D., & Pedersen, T. L. (2024). *ggplot2: Elegant Graphics for Data Analysis* (3rd ed.). <https://ggplot2-book.org/>.
