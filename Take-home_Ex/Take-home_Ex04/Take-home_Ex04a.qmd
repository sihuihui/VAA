---
title: "Take-home Exercise 4: Prototyping Time Series Module for Visual Analytics Shiny Application" 
author: "Goh Si Hui"
date: 2024/02/25
execute: 
  echo: true
  eval: true
  freeze: true
  warning: false
  message: false
---

# About this Exercise
In this exercise, we will be preparing the time-series forecasting module of the proposed Shiny Application and complete the following task:

-   Evaluate and determine the necessary R packages needed for my group project's Shiny application;

-   Prepare and test the specific R codes can be run and returned the correct output as expected; 

-   Determine the parameters and outputs that will be exposed on the Shiny applications; and 

-   Select the appropriate Shiny UI components for exposing the parameters determined above. 

# Getting Started

Before we start, let us ensure that the required R packages have been installed and import the relevant data for this exercise. 

## Loading R Packages

The code chunk below uses p_load() of pacman package to check if the abovementioned packages are installed in the computer. If they are, they will be launched in R. Otherwise, pacman will install the relevant packages before launching them.

```{r}
pacman::p_load(tidyverse, lubridate, knitr, data.table, ggplot2, plotly, ggthemes, ggfortify, forecast, MLmetrics, tsbox, xts, imputeTS, astsa, tseries)
```

## Importing Data Into R

For this exercise, we will be using the historical daily weather records from [weather.gov.sg](http://www.weather.gov.sg/climate-historical-daily/). We retrieved the daily records data from Jan 1980 to Dec 2023 via [data.gov.sg's API] (https://beta.data.gov.sg/collections/1459/view). The daily historical weather records is in csv file format.

We use `read_csv()` function of **readr** to import the `daily_historical` csv file into R then we will use `glimpse()` of **dplyr** to learn about the associated attribute information in the dataframe.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| eval: false

data <- read_csv("data/daily_historical.csv")
glimpse(data)
```
:::{.callout-note}
## Observations 

-   There is no date but there are columns  `year`, `month` and `day`. In addition, we also note that R currently read columns `year`, `month` and `day` as numeric data.

-   There are different columns for rainfall and temperature so we will need to select and filter the relevant columns that we want in subsequent steps.  

-   The entire dataset `daily_historical.csv` is very large. We should save the filtered data into an R data format (RDS) so that we can easily retrieve it in future without importing the entire `daily_historical.csv` dataset again. 

:::

## Creating a date column

Let us first create a date column, called `tdate` using `paste()`, `mutate()` and lubridate's `ymd()` to convert the numeric data type into a date data type and year-month-day format. 

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| eval: false

data$tdate <- paste(data$year, "-", data$month, "-", data$day)
data <- data %>%
  mutate(tdate = ymd(tdate))

glimpse(data)
```

# Temperature Data 

Now we will select the relevant temperature related columns needed for this exerise using `select()`. We will examine the resultant dataframe `temp` using `str()`. 

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| eval: false
temp <- data %>%
  select(station, tdate, mean_temperature, maximum_temperature, minimum_temperature) 

str(temp)
```

:::{.callout-note}
## Observations

-   The resultant dataframe (`temp`) is a tibble dataframe with the following columns:
  -   `station`: refers to the weather station that collected this temperature reading. 
  -   `tdate`: refers to the date of the temperature reading collected. 
  -   `mean_temperature`: refers to the mean temperature reading of that day. 
  -   `maximum_temperature`: refers to the highest temperature reading of that day.
  -   'minimum_temperature`: refers to the lowest temperature reading of that day. 

:::

Let us save the dataframe into an RDS file for future usage using `write_rds()`. 

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| eval: false
write_rds(temp, "data/temperature.rds")

```

We will bring in the temperature data using `read_rds()`. Let us check the imported RDS data using `str()` again. 
```{r}
#| code-fold: true
#| code-summary: "Show the code"
temp <- read_rds("data/temperature.rds")
str(temp)
```
:::{.callout-note}
## Observations 

-   temp is a tibble dataframe.
-   The data type for the columns are in order with station being treated as character data type, `tdate` as date data type and the temperature related columns are seen as numeric. 
-   There seems to be a large number of missing temperature. Let us investigate further in the subsequent steps. 

:::

## Investigating missing values 

First, let us use summary to have a sense of the missing temperature and date data (if any) and their ranges. 

```{r}
#| code-fold: true
#| code-summary: "Show the code"

summary(temp)
```

:::{.callout-note}
## Observations 
-   The observations ranged from 1 Jan 1980 to 31 Dec 2023. There are 58 rows with missing dates. We should drop these rows since they are unable to tell us which day the observations were made (even if they have temperature readings). 

-   There are 255,645 rows of NAs in daily mean temperature. 

-   There are 255,282 rows of NAs in daily maximum temperature. 

-   There are 255,283 rows of NAs in daily minimum temperature. 

-   We noted that there are a lot of missing values. As the aim of this task is to forecast future temperatures, missing value treatment is not so straight-forward. Imputation using mean, median & mode might hide trends or seasonal patterns whereas removing missing data points altogether might reduce information contained in other features. Let's understand more about the missing values before we proceed to do imputation for missing values. 
:::


First, let us drop those rows where date is missing because we would not be able to identify when the temperature(s) were collected. 

```{r}
#| code-fold: true
#| code-summary: "Show the code"

temp <- temp %>%
  drop_na(tdate)

summary(temp)
```

## Further exploration of missing temperatures using plotly

We noted that there are many weather stations in the `temp` dataframe. Hence, we will make use of plotly to further explore the missing temperatures. 

### Daily Mean Temperatures 
Let us first explore the daily mean temperatures by selecting the relevant columns and pivot the dataframe wider. 

```{r}
#| code-fold: true
#| code-summary: "Show the code"

temp_mean_wide <- temp %>%
  select(tdate, station, mean_temperature) %>%
  pivot_wider(names_from = station, values_from = mean_temperature)

glimpse(temp_mean_wide)
```

We will make use of plotly to explore the missing daily temperatures for each station using a dropdown list. 

```{r}
plot_ly(data = temp_mean_wide, 
        x = ~tdate, 
        y = ~ Admiralty, 
        type = "scatter", 
        mode = "lines") |> 
  layout(title = "Temperature observed by Weather Stations", 
       xaxis = list(title = "Date"), 
       yaxis = list(title = "", range = c(0,40)), 
      theme_ipsum_rc(plot_title_size = 13, plot_title_margin=4, subtitle_size=11, subtitle_margin=4,  
                 axis_title_size = 8, axis_text_size=8, axis_title_face= "bold", plot_margin = margin(4, 4, 4, 4)),  
       updatemenus = list(list(type = 'dropdown', 
                               xref = "paper", 
                               yref = "paper", 
                               xanchor = "left",
                               x = 0.04,
                               y = 0.95, 
                               buttons = list(
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_wide$Admiralty)), 
                                                    list(yaxis = list(title = "Temperature in Admiralty", range = c(0,40)))),label = "Admiralty"),
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_wide$`East Coast Parkway`)), 
                                                    list(yaxis = list(title = "Temperature in East Coast Parkway", range = c(0,40)))),label = "East Coast Parkway"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_wide$`Ang Mo Kio`)), 
                                                    list(yaxis = list(title = "Temperature in Ang Mo Kio", range = c(0,40)))),label = "Ang Mo Kio"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_wide$Newton)), 
                                                    list(yaxis = list(title = "Temperature in Newton", range = c(0,40)))),label = "Newton"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_wide$`Tuas South`)), 
                                                    list(yaxis = list(title = "Temperature in Tuas South", range = c(0,40)))),label = "Tuas South"),
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_wide$`Pasir Panjang`)), 
                                                    list(yaxis = list(title = "Temperature in Pasir Panjang", range = c(0,40)))),label = "Pasir Panjang"), 
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_wide$`Jurong Island`)), 
                                                    list(yaxis = list(title = "Temperature in Jurong Island", range = c(0,40)))),label = "Jurong Island"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_wide$`Choa Chu Kang (South)`)), 
                                                    list(yaxis = list(title = "Temperature in Choa Chu Kang (South)", range = c(0,40)))),label = "Choa Chu Kang (South)"), 
                                 list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$Changi)), 
                                                    list(yaxis = list(title = "Temperature in Changi", range = c(0,40)))),label = "Changi"),
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_wide$`Tai Seng`)), 
                                                    list(yaxis = list(title = "Temperature in Tai Seng", range = c(0,40)))),label = "Tai Seng"),
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_wide$`Jurong (West)`)), 
                                                    list(yaxis = list(title = "Temperature in Jurong West", range = c(0,40)))),label = "Jurong West"), 
                                   list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$Clementi)), 
                                                    list(yaxis = list(title = "Temperature  in Clementi", range = c(0,40)))),label = "Clementi"), 
                                   list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Sentosa Island`)), 
                                                    list(yaxis = list(title = "Temperature  in Sentosa", range = c(0,40)))),label = "Sentosa"), 
                                 list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Macritchie Reservoir`)), 
                                                    list(yaxis = list(title = "Temperature  at Macritchie Reservoir", range = c(0,40)))),label = "Macritchie Reservoir"), 
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Lower Peirce Reservoir`)), 
                                                    list(yaxis = list(title = "Temperature  at Lower Peirce Reservoir", range = c(0,40)))),label = "Lower Peirce Reservoir"),
                                 list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Lim Chu Kang`)), 
                                                    list(yaxis = list(title = "Temperature at Lim Chu Kang", range = c(0,40)))),label = "Lim Chu Kang"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Marine Parade`)), 
                                                    list(yaxis = list(title = "Temperature at Marine Parade", range = c(0,40)))),label = "Marine Parade"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Choa Chu Kang (Central)`)), 
                                                    list(yaxis = list(title = "Temperature at Choa Chu Kang (Central)", range = c(0,40)))),label = "Choa Chu Kang (Central)"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Choa Chu Kang (Central)`)), 
                                                    list(yaxis = list(title = "Temperature at Choa Chu Kang (Central)", range = c(0,40)))),label = "Choa Chu Kang (Central)"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Nicoll Highway`)), 
                                                    list(yaxis = list(title = "Temperature at Nicoll Highway", range = c(0,40)))),label = "Nicoll Highway"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Botanic Garden`)), 
                                                    list(yaxis = list(title = "Temperature at Botanic Garden", range = c(0,40)))),label = "Botanic Garden"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$Whampoa)), 
                                                    list(yaxis = list(title = "Temperature at Whampoa", range = c(0,40)))),label = "Whampoa"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Jurong Pier`)), 
                                                    list(yaxis = list(title = "Temperature at Jurong Pier", range = c(0,40)))),label = "Jurong Pier"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Ulu Pandan`)), 
                                                    list(yaxis = list(title = "Temperature at Ulu Pandan", range = c(0,40)))),label = "Ulu Pandan"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$Mandai)), 
                                                    list(yaxis = list(title = "Temperature at Mandai", range = c(0,40)))),label = "Mandai"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Bukit Panjang`)), 
                                                    list(yaxis = list(title = "Temperature at Bukit Panjang", range = c(0,40)))),label = "Bukit Panjang"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Kranji Reservoir`)), 
                                                    list(yaxis = list(title = "Temperature at Kranji Reservoir", range = c(0,40)))),label = "Kranji Reservoir"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Upper Peirce Reservoir`)), 
                                                    list(yaxis = list(title = "Temperature at Upper Peirce Reservoir", range = c(0,40)))),label = "Upper Peirce Reservoir"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Kent Ridge`)), 
                                                    list(yaxis = list(title = "Temperature at Kent Ridge", range = c(0,40)))),label = "Kent Ridge"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$Queenstown)), 
                                                    list(yaxis = list(title = "Temperature at Queenstown", range = c(0,40)))),label = "Queenstown"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Tanjong Katong`)), 
                                                    list(yaxis = list(title = "Temperature at Tanjong Katong", range = c(0,40)))),label = "Tanjong Katong"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Somerset (Road)`)), 
                                                    list(yaxis = list(title = "Temperature at Somerset (Road)", range = c(0,40)))),label = "Somerset (Road)"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Punggol`)), 
                                                    list(yaxis = list(title = "Temperature at Punggol", range = c(0,40)))),label = "Punggol"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Simei`)), 
                                                    list(yaxis = list(title = "Temperature at Simei", range = c(0,40)))),label = "Simei"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Toa Payoh`)), 
                                                    list(yaxis = list(title = "Temperature at Toa Payoh", range = c(0,40)))),label = "Toa Payoh"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Tuas`)), 
                                                    list(yaxis = list(title = "Temperature at Tuas", range = c(0,40)))),label = "Tuas"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Bukit Timah`)), 
                                                    list(yaxis = list(title = "Temperature at Bukit Timah", range = c(0,40)))),label = "Bukit Timah"),
                                list(method = "update", 
                                        args = list(list(y = list(temp_mean_wide$`Pasir Ris (Central)`)), 
                                                    list(yaxis = list(title = "Temperature at Pasir Ris (Central)", range = c(0,40)))),label = "Pasir Ris (Central)")
                               ))))  



```

:::{.callout-note}
## Observations 

-   It seems like there are some weather stations with no temperature data at all. We should remove them from the `temp` dataframe. 

-   There are some weather stations (e.g. Admiralty) have temperature data only from a certain year onwards (e.g. 2009), and some stations (e.g. Changi) have temperature data as early as 1980s.  

-   For those weather stations with temperature data, they also have missing values over a given time period. So we will need to decide how to handle these missing values in subsequent sections. 


::: 

Let us identify the amount of missing values for each weather station using the following code chunk. 

```{r}
#| code-fold: true
#| code-summary: "Show the code"

missing_values <- temp_mean_wide %>%
  gather(key = "key", value = "val") %>%
  mutate(isna = is.na(val)) %>%
  group_by(key) %>%
  mutate(total = n()) %>%
  group_by(key, total, isna) %>%
  summarise(num.isna = n()) %>%
  mutate(pct = num.isna / total * 100)

levels <-
    (missing_values  %>% filter(isna == T) %>% arrange(desc(pct)))$key

percentage_plot <- missing_values %>%
      ggplot() +
        geom_bar(aes(x = reorder(key, desc(pct)), 
                     y = pct, fill=isna), 
                 stat = 'identity', alpha=0.8) +
      scale_x_discrete(limits = levels) +
      scale_fill_manual(name = "", 
                        values = c('steelblue', 'tomato3'), labels = c("Present", "Missing")) +
      coord_flip() +
      labs(title = "Percentage of missing values", x =
             'Variable', y = "% of missing values")

percentage_plot


```
The above output is consistent with what we observed when exploring the data using plotly. There are numerous stations without temperature readings and 
Drop the stations with no weather data at all. 

```{r}
notempdata <- missing.values %>%
  filter(isna == TRUE & pct==100)

notempdata$key
```

```{r}

stationstoremove <- c("Botanic Garden","Bukit Panjang","Bukit Timah","Choa Chu Kang (Central)","Jurong Pier","Kent Ridge", "Kranji Reservoir", "Lim Chu Kang", "Lower Peirce Reservoir", "Macritchie Reservoir","Mandai", "Marine Parade","Nicoll Highway", "Pasir Ris (Central)", "Punggol", "Queenstown","Simei", "Somerset (Road)","Tanjong Katong", "Toa Payoh", "Tuas", "Ulu Pandan", "Upper Peirce Reservoir","Whampoa")

#create a operator to exclude things 
'%!in%' <- function(x,y)!('%in%'(x,y))

#excluded stations that have no temp data at all 
temp_clean <- temp %>%
  filter(station %!in% stationstoremove)

glimpse(temp_clean)
```

```{r}
temp_mean_widec <- temp_clean %>%
  select(tdate, station, mean_temperature) %>%
  pivot_wider(names_from = station, values_from = mean_temperature)

glimpse(temp_mean_widec)
```

```{r}
plot_ly(data = temp_mean_widec, 
        x = ~tdate, 
        y = ~ Admiralty, 
        type = "scatter", 
        mode = "lines+markers") |> 
  layout(title = "Temperature observed by Weather Station", 
       xaxis = list(title = "Date"), 
       yaxis = list(title = "", range = c(0,40)), 
      theme_ipsum_rc(plot_title_size = 13, plot_title_margin=4, subtitle_size=11, subtitle_margin=4,  
                 axis_title_size = 8, axis_text_size=8, axis_title_face= "bold", plot_margin = margin(4, 4, 4, 4)),  
       updatemenus = list(list(type = 'dropdown', 
                               xref = "paper", 
                               yref = "paper", 
                               xanchor = "left",
                               x = 0.04,
                               y = 0.95, 
                               buttons = list(
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$Admiralty)), 
                                                    list(yaxis = list(title = "Temperature in Admiralty", range = c(0,40)))),label = "Admiralty"),
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`East Coast Parkway`)), 
                                                    list(yaxis = list(title = "Temperature in East Coast Parkway", range = c(0,40)))),label = "East Coast Parkway"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Ang Mo Kio`)), 
                                                    list(yaxis = list(title = "Temperature in Ang Mo Kio", range = c(0,40)))),label = "Ang Mo Kio"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$Newton)), 
                                                    list(yaxis = list(title = "Temperature in Newton", range = c(0,40)))),label = "Newton"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Tuas South`)), 
                                                    list(yaxis = list(title = "Temperature in Tuas South", range = c(0,40)))),label = "Tuas South"),
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Pasir Panjang`)), 
                                                    list(yaxis = list(title = "Temperature in Pasir Panjang", range = c(0,40)))),label = "Pasir Panjang"), 
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Jurong Island`)), 
                                                    list(yaxis = list(title = "Temperature in Jurong Island", range = c(0,40)))),label = "Jurong Island"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Choa Chu Kang (South)`)), 
                                                    list(yaxis = list(title = "Temperature in Choa Chu Kang", range = c(0,40)))),label = "Choa Chu Kang"), 
                                 list(method = "update", 
                                        args = list(list(y = list(temp_mean_widec$Changi)), 
                                                    list(yaxis = list(title = "Temperature in Changi", range = c(0,40)))),label = "Changi"),
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Tai Seng`)), 
                                                    list(yaxis = list(title = "Temperature in Tai Seng", range = c(0,40)))),label = "Tai Seng"),
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Jurong (West)`)), 
                                                    list(yaxis = list(title = "Temperature in Jurong West", range = c(0,40)))),label = "Jurong West"), 
                                   list(method = "update", 
                                        args = list(list(y = list(temp_mean_widec$Clementi)), 
                                                    list(yaxis = list(title = "Temperature  in Clementi", range = c(0,40)))),label = "Clementi"), 
                                   list(method = "update", 
                                        args = list(list(y = list(temp_mean_widec$`Sentosa Island`)), 
                                                    list(yaxis = list(title = "Temperature  in Sentosa", range = c(0,40)))),label = "Sentosa")
                                   
                               ))))  



```

There are some missing time gaps in the data, which we need to do imputation. 
Daily data for data ranging over 40 years is too frequent for time series forecasting. 


## Preparing for time series forecasting 

```{r}
#create year-month col
temp$year_month <- floor_date(temp$tdate, "month")
glimpse(temp)
```
```{r}
monthly_temp <- temp %>%                         # Aggregate data
  group_by(station, year_month) %>% 
  summarise(across(c(mean_temperature, maximum_temperature, minimum_temperature), mean))

glimpse(monthly_temp)


```



```{r}
monthly_temp_wide <- monthly_temp %>%
  select(year_month, station, mean_temperature) %>%
  pivot_wider(names_from = station, values_from = mean_temperature)

glimpse(monthly_temp_wide)
```


```{r}
plot_ly(data = monthly_temp_wide, 
        x = ~year_month, 
        y = ~ Admiralty, 
        type = "scatter",
        mode = "lines+markers")|> 
  layout(title = "Temperature observed by Weather Station", 
       xaxis = list(title = "Date"), 
       yaxis = list(title = "", range = c(0,40)), 
      theme_ipsum_rc(plot_title_size = 13, plot_title_margin=4, subtitle_size=11, subtitle_margin=4,  
                 axis_title_size = 8, axis_text_size=8, axis_title_face= "bold", plot_margin = margin(4, 4, 4, 4)),  
       updatemenus = list(list(type = 'dropdown', 
                               xref = "paper", 
                               yref = "paper", 
                               xanchor = "left",
                               x = 0.04,
                               y = 0.95, 
                               buttons = list(
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$Admiralty)), 
                                                    list(yaxis = list(title = "Temperature in Admiralty", range = c(0,40)))),label = "Admiralty"),
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`East Coast Parkway`)), 
                                                    list(yaxis = list(title = "Temperature in East Coast Parkway", range = c(0,40)))),label = "East Coast Parkway"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Ang Mo Kio`)), 
                                                    list(yaxis = list(title = "Temperature in Ang Mo Kio", range = c(0,40)))),label = "Ang Mo Kio"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$Newton)), 
                                                    list(yaxis = list(title = "Temperature in Newton", range = c(0,40)))),label = "Newton"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Tuas South`)), 
                                                    list(yaxis = list(title = "Temperature in Tuas South", range = c(0,40)))),label = "Tuas South"),
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Pasir Panjang`)), 
                                                    list(yaxis = list(title = "Temperature in Pasir Panjang", range = c(0,40)))),label = "Pasir Panjang"), 
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Jurong Island`)), 
                                                    list(yaxis = list(title = "Temperature in Jurong Island", range = c(0,40)))),label = "Jurong Island"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Choa Chu Kang (South)`)), 
                                                    list(yaxis = list(title = "Temperature in Choa Chu Kang", range = c(0,40)))),label = "Choa Chu Kang"), 
                                 list(method = "update", 
                                        args = list(list(y = list(temp_mean_widec$Changi)), 
                                                    list(yaxis = list(title = "Temperature in Changi", range = c(0,40)))),label = "Changi"),
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Tai Seng`)), 
                                                    list(yaxis = list(title = "Temperature in Tai Seng", range = c(0,40)))),label = "Tai Seng"),
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Jurong (West)`)), 
                                                    list(yaxis = list(title = "Temperature in Jurong West", range = c(0,40)))),label = "Jurong West"), 
                                   list(method = "update", 
                                        args = list(list(y = list(temp_mean_widec$Clementi)), 
                                                    list(yaxis = list(title = "Temperature  in Clementi", range = c(0,40)))),label = "Clementi"), 
                                   list(method = "update", 
                                        args = list(list(y = list(temp_mean_widec$`Sentosa Island`)), 
                                                    list(yaxis = list(title = "Temperature  in Sentosa", range = c(0,40)))),label = "Sentosa")
                                   
                               ))))  



```

Convert the data to timeseries data 

```{r}
glimpse(monthly_temp)

```
We are using changi weather station for now 

```{r}
adm <- monthly_temp %>%
  filter(station == "Admiralty")

glimpse(adm)
```

```{r}
range(adm$year_month)

```

```{r}
adm_xts <- xts(adm[,c("mean_temperature", "maximum_temperature", "minimum_temperature")], order.by=as.Date(adm$year_month))
adm_xts<- ts_regular(adm_xts)
adm_xts <- na.fill(adm_xts, "extend")
adm_xts<- window(adm_xts, start = as.Date("2009-01-01"), end = as.Date("2023-12-01"))
```

```{r}
ggplot(adm_xts, aes(x = Index, y = mean_temperature)) + 
  geom_line()
```


```{r}

ggplot_na_distribution(adm_xts$mean_temperature)
```
```{r}
statsNA(adm_xts$mean_temperature)

```
### missing values 
```{r}

adm_imp_kalman <- na_kalman(adm_xts, model = "auto.arima")

#plot chart 

ggplot(adm_imp_kalman, aes(x = Index, y = mean_temperature)) + 
  geom_line()

```

```{r}

adm_imp_movingavg <- na_ma(adm_xts)
#plot chart 
ggplot(adm_imp_movingavg, aes(x = Index, y = mean_temperature)) + 
  geom_line()
```


test if the time series is stationary 

```{r}
adf.test(adm_imp_movingavg$mean_temperature)

```

```{r}

class(adm_imp_movingavg)


```

```{r}

adm_decomposition <- stl(ts_ts(adm_imp_movingavg$mean_temperature), s.window = 12, t.window = 28001)
plot(adm_decomposition)
```


## Building Models 

```{r}
# create samples 
training <- ts_ts(window(adm_imp_movingavg$mean_temperature, start = as.Date('2009-01-01'), end = as.Date('2015-12-01')))
validation <- ts_ts(window(adm_imp_movingavg$mean_temperature, start = as.Date('2016-01-01')))

```

### Naive method 
```{r}
naive_model <- naive(training, h = length(validation))
MAPE(naive_model$mean, validation) * 100

summary(naive_model)
```


### Seasonal Naive method 
```{r}
snaive_model <- snaive(training, h = length(validation))
MAPE(snaive_model$mean, validation) * 100

summary(snaive_model)
```


### State Space Models

```{r}
ets_modelT <- ets(training, allow.multiplicative.trend = TRUE)
summary(ets_modelT)
```

Adictive errors 
No trend 
Addictive seasonnality

```{r}
ets_forecastT <- forecast(ets_modelT, h=length(validation))
MAPE(ets_forecastT$mean, validation) *100
ets_forecastT
```





### Holt-Winters 

```{r}
hw_model <- hw(training, h = length(validation))
MAPE(hw_model$mean, validation)*100

```


### ARIMA 

```{r}

arima_optimal <- auto.arima(training)
summary(arima_optimal)

```

```{r}
sarima_forecast <- sarima.for(training, n.ahead=length(validation), 
                               p=0,d=1,q=1,P=2,D=1,Q=0,S=12)
sarima_forecast
MAPE(sarima_forecast$pred, validation)*100
```




# Rainfall Data 
## Selecting the relevant columns for Temperature Data 
```{r}
rain <- data %>%
  select(tdate, station, daily_rainfall_total) 

glimpse(rain)
```

```{r}
#| eval: false

write_rds(rain, "data/rainfall.rds")

```

```{r}
rain <- read_rds("data/rainfall.rds")

```

## Checking for missing values 

```{r}
summary(rain)

```

```{r}
rain <- rain %>%
  drop_na(c(tdate, station))

summary(rain)
```

```{r}
unique(rain$station)
```

## Further exploration of total rainfall using plotly


```{r}
rain_wide <- rain %>%
  pivot_wider(names_from = station, values_from = daily_rainfall_total)

glimpse(rain_wide)
```



```{r}
plot_ly(data = rain_wide, 
        x = ~tdate, 
        y = ~ Admiralty, 
        type = "bar") |> 
  layout(title = "Total Rain Fall observed by Weather Station", 
       xaxis = list(title = "Date"), 
       yaxis = list(title = "", range = c(0,300)), 
      theme_ipsum_rc(plot_title_size = 13, plot_title_margin=4, subtitle_size=11, subtitle_margin=4,  
                 axis_title_size = 8, axis_text_size=8, axis_title_face= "bold", plot_margin = margin(4, 4, 4, 4)),  
       updatemenus = list(list(type = 'dropdown', 
                               xref = "paper", 
                               yref = "paper", 
                               xanchor = "left",
                               x = 0.04,
                               y = 0.95, 
                               buttons = list(
                                 list(method = "update",
                                      args = list(list(y = list(rain_wide$Admiralty)), 
                                                    list(yaxis = list(title = "Total Rainfall observed in Admiralty", range = c(0,300)))),label = "Admiralty"),
                                 list(method = "update",
                                      args = list(list(y = list(rain_wide$`East Coast Parkway`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed in East Coast Parkway", range = c(0,300)))),label = "East Coast Parkway"), 
                                 list(method = "update",
                                      args = list(list(y = list(rain_wide$`Ang Mo Kio`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed in Ang Mo Kio", range = c(0,300)))),label = "Ang Mo Kio"), 
                                 list(method = "update",
                                      args = list(list(y = list(rain_wide$Newton)), 
                                                    list(yaxis = list(title = "Total Rainfall observed in Newton", range = c(0,300)))),label = "Newton"), 
                                 list(method = "update",
                                      args = list(list(y = list(rain_wide$`Tuas South`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed in Tuas South", range = c(0,300)))),label = "Tuas South"),
                                  list(method = "update",
                                      args = list(list(y = list(rain_wide$`Pasir Panjang`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed in Pasir Panjang", range = c(0,300)))),label = "Pasir Panjang"), 
                                  list(method = "update",
                                      args = list(list(y = list(rain_wide$`Jurong Island`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed in Jurong Island", range = c(0,300)))),label = "Jurong Island"), 
                                 list(method = "update",
                                      args = list(list(y = list(rain_wide$`Choa Chu Kang (South)`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed in Choa Chu Kang (South)", range = c(0,300)))),label = "Choa Chu Kang (South)"), 
                                 list(method = "update", 
                                        args = list(list(y = list(rain_wide$Changi)), 
                                                    list(yaxis = list(title = "Total Rainfall observed in Changi", range = c(0,300)))),label = "Changi"),
                                  list(method = "update",
                                      args = list(list(y = list(rain_wide$`Tai Seng`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed in Tai Seng", range = c(0,300)))),label = "Tai Seng"),
                                  list(method = "update",
                                      args = list(list(y = list(rain_wide$`Jurong (West)`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed in Jurong West", range = c(0,300)))),label = "Jurong West"), 
                                   list(method = "update", 
                                        args = list(list(y = list(rain_wide$Clementi)), 
                                                    list(yaxis = list(title = "Total Rainfall observed in Clementi", range = c(0,300)))),label = "Clementi"), 
                                   list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Sentosa Island`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed  in Sentosa", range = c(0,300)))),label = "Sentosa"), 
                                 list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Macritchie Reservoir`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed  at Macritchie Reservoir", range = c(0,300)))),label = "Macritchie Reservoir"), 
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Lower Peirce Reservoir`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed  at Lower Peirce Reservoir", range = c(0,300)))),label = "Lower Peirce Reservoir"),
                                 list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Lim Chu Kang`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Lim Chu Kang", range = c(0,300)))),label = "Lim Chu Kang"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Marine Parade`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Marine Parade", range = c(0,300)))),label = "Marine Parade"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Choa Chu Kang (Central)`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Choa Chu Kang (Central)", range = c(0,300)))),label = "Choa Chu Kang (Central)"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Nicoll Highway`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Nicoll Highway", range = c(0,300)))),label = "Nicoll Highway"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Botanic Garden`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Botanic Garden", range = c(0,300)))),label = "Botanic Garden"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$Whampoa)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Whampoa", range = c(0,300)))),label = "Whampoa"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Jurong Pier`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Jurong Pier", range = c(0,300)))),label = "Jurong Pier"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Ulu Pandan`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Ulu Pandan", range = c(0,300)))),label = "Ulu Pandan"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$Mandai)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Mandai", range = c(0,300)))),label = "Mandai"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Bukit Panjang`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Bukit Panjang", range = c(0,300)))),label = "Bukit Panjang"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Kranji Reservoir`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Kranji Reservoir", range = c(0,300)))),label = "Kranji Reservoir"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Upper Peirce Reservoir`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Upper Peirce Reservoir", range = c(0,300)))),label = "Upper Peirce Reservoir"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Kent Ridge`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Kent Ridge", range = c(0,300)))),label = "Kent Ridge"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$Queenstown)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Queenstown", range = c(0,300)))),label = "Queenstown"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Tanjong Katong`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Tanjong Katong", range = c(0,300)))),label = "Tanjong Katong"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Somerset (Road)`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Somerset (Road)", range = c(0,300)))),label = "Somerset (Road)"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Punggol`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Punggol", range = c(0,300)))),label = "Punggol"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Simei`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Simei", range = c(0,300)))),label = "Simei"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Toa Payoh`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Toa Payoh", range = c(0,300)))),label = "Toa Payoh"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Tuas`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Tuas", range = c(0,300)))),label = "Tuas"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Bukit Timah`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Bukit Timah", range = c(0,300)))),label = "Bukit Timah"),
                                list(method = "update", 
                                        args = list(list(y = list(rain_wide$`Pasir Ris (Central)`)), 
                                                    list(yaxis = list(title = "Total Rainfall observed at Pasir Ris (Central)", range = c(0,300)))),label = "Pasir Ris (Central)")
                               ))))  



```

Seems like there are some stations with no rainfall data in all years, while some have rainfall data from certain years onwards. Let's explore further.

```{r}
missing.values <- rain_wide %>%
  gather(key = "key", value = "val") %>%
  mutate(isna = is.na(val)) %>%
  group_by(key) %>%
  mutate(total = n()) %>%
  group_by(key, total, isna) %>%
  summarise(num.isna = n()) %>%
  mutate(pct = num.isna / total * 100)

levels <-
    (missing.values  %>% filter(isna == T) %>% arrange(desc(pct)))$key

percentage.plot <- missing.values %>%
      ggplot() +
        geom_bar(aes(x = reorder(key, desc(pct)), 
                     y = pct, fill=isna), 
                 stat = 'identity', alpha=0.8) +
      scale_x_discrete(limits = levels) +
      scale_fill_manual(name = "", 
                        values = c('steelblue', 'tomato3'), labels = c("Present", "Missing")) +
      coord_flip() +
      labs(title = "Percentage of missing values", x =
             'Variable', y = "% of missing values")

percentage.plot


```


## Preparing for time series forecasting 

```{r}
#create year-month col
rain$year_month <- floor_date(rain$tdate, "month")
glimpse(rain)
```

```{r}
monthly_rain <- rain %>%                         # Aggregate data
  group_by(station, year_month) %>% 
  summarise(total_rf = sum(daily_rainfall_total))

glimpse(monthly_rain)


```
```{r}
monthly_rain_wide <- monthly_rain %>%
  select(year_month, station, total_rf) %>%
  pivot_wider(names_from = station, values_from = total_rf)

glimpse(monthly_rain_wide)
```
```{r}
plot_ly(data = monthly_rain_wide, 
        x = ~year_month, 
        y = ~ Admiralty, 
        type = "scatter",
        mode = "lines+markers")|> 
  layout(title = "Total Rainfall observed by Weather Station", 
       xaxis = list(title = "Date"), 
       yaxis = list(title = "" ), 
      theme_ipsum_rc(plot_title_size = 13, plot_title_margin=4, subtitle_size=11, subtitle_margin=4,  
                 axis_title_size = 8, axis_text_size=8, axis_title_face= "bold", plot_margin = margin(4, 4, 4, 4)),  
       updatemenus = list(list(type = 'dropdown', 
                               xref = "paper", 
                               yref = "paper", 
                               xanchor = "left",
                               x = 0.04,
                               y = 0.95, 
                               buttons = list(
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$Admiralty)), 
                                                    list(yaxis = list(title = "Temperature in Admiralty", range = c(0,40)))),label = "Admiralty"),
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`East Coast Parkway`)), 
                                                    list(yaxis = list(title = "Temperature in East Coast Parkway", range = c(0,40)))),label = "East Coast Parkway"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Ang Mo Kio`)), 
                                                    list(yaxis = list(title = "Temperature in Ang Mo Kio", range = c(0,40)))),label = "Ang Mo Kio"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$Newton)), 
                                                    list(yaxis = list(title = "Temperature in Newton", range = c(0,40)))),label = "Newton"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Tuas South`)), 
                                                    list(yaxis = list(title = "Temperature in Tuas South", range = c(0,40)))),label = "Tuas South"),
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Pasir Panjang`)), 
                                                    list(yaxis = list(title = "Temperature in Pasir Panjang", range = c(0,40)))),label = "Pasir Panjang"), 
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Jurong Island`)), 
                                                    list(yaxis = list(title = "Temperature in Jurong Island", range = c(0,40)))),label = "Jurong Island"), 
                                 list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Choa Chu Kang (South)`)), 
                                                    list(yaxis = list(title = "Temperature in Choa Chu Kang", range = c(0,40)))),label = "Choa Chu Kang"), 
                                 list(method = "update", 
                                        args = list(list(y = list(temp_mean_widec$Changi)), 
                                                    list(yaxis = list(title = "Temperature in Changi", range = c(0,40)))),label = "Changi"),
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Tai Seng`)), 
                                                    list(yaxis = list(title = "Temperature in Tai Seng", range = c(0,40)))),label = "Tai Seng"),
                                  list(method = "update",
                                      args = list(list(y = list(temp_mean_widec$`Jurong (West)`)), 
                                                    list(yaxis = list(title = "Temperature in Jurong West", range = c(0,40)))),label = "Jurong West"), 
                                   list(method = "update", 
                                        args = list(list(y = list(temp_mean_widec$Clementi)), 
                                                    list(yaxis = list(title = "Temperature  in Clementi", range = c(0,40)))),label = "Clementi"), 
                                   list(method = "update", 
                                        args = list(list(y = list(temp_mean_widec$`Sentosa Island`)), 
                                                    list(yaxis = list(title = "Temperature  in Sentosa", range = c(0,40)))),label = "Sentosa")
                                   
                               ))))  



```

Convert the data to timeseries data 

```{r}
glimpse(monthly_rain)

```
We are using changi weather station for now 

```{r}
adm_rf<- monthly_rain %>%
  filter(station == "Admiralty")

glimpse(adm_rf)
```

```{r}
range(adm_rf$year_month)

```

```{r}
adm_rf_xts <- xts(adm_rf[,"total_rf"], order.by=as.Date(adm_rf$year_month))
adm_rf_xts<- ts_regular(adm_rf_xts)
adm_rf_xts <- na.fill(adm_rf_xts, "extend")
adm_rf_xts<- window(adm_rf_xts, start = as.Date("2009-01-01"), end = as.Date("2023-12-01"))
```
```{r}
class(adm_rf_xts)
autoplot(adm_rf_xts)
```

```{r}
#check with ti does not work
ggplot(adm_rf_xts, aes(x = Index, y = value)) + 
  geom_line()
```

```{r}

ggplot_na_distribution(adm_rf_xts)
```
```{r}
statsNA(adm_rf_xts$value)

```
```{r}

adm_imp_kalman <- na_kalman(adm_rf_xts, model = "auto.arima")

#plot chart 

ggplot(adm_imp_kalman, aes(x = Index, y = value)) + 
  geom_line()

```
```{r}

admrf_imp_movingavg <- na_ma(adm_rf_xts)
#plot chart 
ggplot(admrf_imp_movingavg, aes(x = Index, y = value)) + 
  geom_line()
```

## decomposition of rainfall 
```{r}
fit <- stl(ts_ts(adm_imp_movingavg), s.window=365, t.window = 14001)
plot(fit)

```
## Building Models 


```{r}
# create samples 
trainingrf <- ts_ts(window(admrf_imp_movingavg, start = as.Date('2009-01-01'), end = as.Date('2015-12-01')))
validationrf <- ts_ts(window(admrf_imp_movingavg, start = as.Date('2016-01-01')))

```

### Naive method 
```{r}
naive_model <- naive(trainingrf, h = length(validationrf))
MAPE(naive_model$mean, validationrf) * 100

summary(naive_model)
```

### Seasonal Naive method 
```{r}
snaive_model <- snaive(trainingrf, h = length(validationrf))
summary(snaive_model)
MAPE(snaive_model$mean, validationrf) * 100
```


### State Space Models

```{r}
ets_modelrf <- ets(trainingrf, allow.multiplicative.trend = TRUE)
summary(ets_modelrf)
```

Multipulcative errors 
No trend 
No seasonality

```{r}
ets_forecastrf <- forecast(ets_modelrf, h=length(validationrf))
ets_forecastrf
MAPE(ets_forecastrf$mean, validationrf)*100
```


### Holt-Winters 

```{r}
hw_model <- hw(trainingrf, h = length(validationrf))
MAPE(hw_model$mean, validationrf)*100

```

### ARIMA 

```{r}

arima_optimal <- auto.arima(trainingrf, seasonal = FALSE, stepwise = FALSE, approximation = FALSE)
summary(arima_optimal)

```






# Shiny Dashboard Prototype - UI and Server Design 

## UI 

### Sketch 

### Details 



## Server 

### Details 








# References 

https://michaelminn.net/tutorials/r-weather/index.html
https://towardsdatascience.com/a-guide-to-forecasting-in-r-6b0c9638c261 
https://www.singstat.gov.sg/-/media/files/publications/reference/ssnsep05-pg11-14.ashx
https://otexts.com/fpp2/estimation-and-model-selection.html