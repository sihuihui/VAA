---
title: "Take-home Exercise 4: Prototyping Time Series Module for Visual Analytics Shiny Application" 
author: "Goh Si Hui"
date: 2024/02/25
execute: 
  echo: true
  eval: true
  freeze: true
  warning: false
  message: false
---

# About this Exercise
In this exercise, we will be preparing the time-series forecasting module of the proposed Shiny Application and complete the following task:

-   Evaluate and determine the necessary R packages needed for my group project's Shiny application;

-   Prepare and test the specific R codes can be run and returned the correct output as expected; 

-   Determine the parameters and outputs that will be exposed on the Shiny applications; and 

-   Select the appropriate Shiny UI components for exposing the parameters determined above. 

# Getting Started

## Loading R Packages

```{r}
pacman::p_load(tidyverse, scales, viridis, ggthemes, lubridate, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, ggplot2)
```

## Importing Data Into R

Talk about how we get this data: made use of data.gov.sg's API

```{r}
data <- read_csv("data/daily_historical.csv")
```

```{r}
glimpse(data)

```
# Select rainfall data 

save it into rds 


# select temp data
save it into rds 

# select wind data
save it into rds 


```{r}
missingv <- data %>% 
  map(is.na) %>%
  map(sum) 
  
missingv <- as_tibble(missingv)

kable(missingv)

```

```{r}

# Create a data frame with missing value counts
missing.values <- data %>%
    gather(key = "key", value = "val") %>%
    mutate(is.missing = is.na(val)) %>%
    group_by(key, is.missing) %>%
    summarise(num.missing = n()) %>%
    filter(is.missing==T) %>%
    select(-is.missing) %>%
    arrange(desc(num.missing)) 

# Create a bar chart
missing.values %>%
  ggplot() +
    geom_bar(aes(x=key, y=num.missing), stat = 'identity') +
    labs(x='variable', y="number of missing values", title='Number of missing values') +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
missing.values <- data %>%
  gather(key = "key", value = "val") %>%
  mutate(isna = is.na(val)) %>%
  group_by(key) %>%
  mutate(total = n()) %>%
  group_by(key, total, isna) %>%
  summarise(num.isna = n()) %>%
  mutate(pct = num.isna / total * 100)

levels <-
    (missing.values  %>% filter(isna == T) %>% arrange(desc(pct)))$key

percentage.plot <- missing.values %>%
      ggplot() +
        geom_bar(aes(x = reorder(key, desc(pct)), 
                     y = pct, fill=isna), 
                 stat = 'identity', alpha=0.8) +
      scale_x_discrete(limits = levels) +
      scale_fill_manual(name = "", 
                        values = c('steelblue', 'tomato3'), labels = c("Present", "Missing")) +
      coord_flip() +
      labs(title = "Percentage of missing values", x =
             'Variable', y = "% of missing values")

percentage.plot


```

```{r}
row.plot <- data %>%
  mutate(id = row_number()) %>%
  gather(-id, key = "key", value = "val") %>%
  mutate(isna = is.na(val)) %>%
  ggplot(aes(key, id, fill = isna)) +
    geom_raster(alpha=0.8) +
    scale_fill_manual(name = "",
        values = c('steelblue', 'tomato3'),
        labels = c("Present", "Missing")) +
    scale_x_discrete(limits = levels) +
    labs(x = "Variable",
           y = "Row Number", title = "Missing values in rows") +
    coord_flip()

row.plot
```

# Temperature 

## Data preparation 


```{r}
data_nomissing <- drop_na(data)

```

Confirm that there is no missing values

```{r}

# Create a data frame with missing value counts
missing.values2 <- data_nomissing %>%
    gather(key = "key", value = "val") %>%
    mutate(is.missing = is.na(val)) %>%
    group_by(key, is.missing) %>%
    summarise(num.missing = n()) %>%
    filter(is.missing==T) %>%
    select(-is.missing) %>%
    arrange(desc(num.missing)) 

# Create a bar chart
missing.values2 %>%
  ggplot() +
    geom_bar(aes(x=key, y=num.missing), stat = 'identity') +
    labs(x='variable', y="number of missing values", title='Number of missing values') +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

select temperature data

```{r}

meantemp <- data_nomissing %>%
  select(station, year, month, day, mean_temperature) 

glimpse(meantemp)
```

```{r}

meantemp$date <- paste(meantemp$year, "-", meantemp$month, "-", meantemp$day)
glimpse(meantemp)
```

```{r}
meantemp <- meantemp %>%
  mutate(date = ymd(date))

glimpse(meantemp)
```

```{r}

unique(meantemp$station)
```
